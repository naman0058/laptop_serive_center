<%- include('./header1.ejs') %>

<!-- Nav Header Component Start -->
<div class="iq-navbar-header" style="height: 115px;">
    <div class="container-fluid iq-container">
        <div class="row">
            <div class="col-md-12">
                <div class="flex-wrap d-flex justify-content-between align-items-center">
                    <!-- Optional content here -->
                </div>
            </div>
        </div>
    </div>
    <div class="iq-header-img">
        <img src="/assets/images/dashboard/top-header.png" alt="header" class="theme-color-default-img img-fluid w-100 h-100 animated-scaleX" loading="lazy">
        <img src="/assets/images/dashboard/top-header1.png" alt="header" class="theme-color-purple-img img-fluid w-100 h-100 animated-scaleX" loading="lazy">
        <img src="/assets/images/dashboard/top-header2.png" alt="header" class="theme-color-blue-img img-fluid w-100 h-100 animated-scaleX" loading="lazy">
        <img src="/assets/images/dashboard/top-header3.png" alt="header" class="theme-color-green-img img-fluid w-100 h-100 animated-scaleX" loading="lazy">
        <img src="/assets/images/dashboard/top-header4.png" alt="header" class="theme-color-yellow-img img-fluid w-100 h-100 animated-scaleX" loading="lazy">
        <img src="/assets/images/dashboard/top-header5.png" alt="header" class="theme-color-pink-img img-fluid w-100 h-100 animated-scaleX" loading="lazy">
    </div>
</div>
<!-- Nav Header Component End -->

<div class="content-inner container-fluid pb-0" id="page_layout">
    <div>
        <div class="row">
            <div class="col-xl-12 col-lg-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between">
                        <div class="header-title">
                            <h4 class="card-title">Parts Assign</h4>
                            <p style="margin-top: 20px;color: black;font-weight: bold;">Required Parts : <%=result[0][0].defectivePartsName%></p>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="new-user-info">
                            <div class="table-responsive">
                                <table id="myTable" class="table" data-toggle="data-table-key-filter">
                            <tr>
                                <th>Part Name</th>
                                <th>Model No.</th>
                                <!-- <th>Quantity</th> -->
                                <th>Action</th>
                            </tr>

                            <tbody>
                                <% result[1].forEach(item => { %>
                                    <tr>
                                        <!-- Display data in the specific order -->
                                        <td><%= item.name %></td>
                                        <td><%= item.description%></td>
                                        <!-- <td><%= item.quantity %></td> -->
                                        
                                        

                                        <td>

                                           
                                            <button class="btn btn-success" onclick="assignItem('<%= callid %>', <%= item.id %> , '<%=type%>')">Assign</button>
                                            
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>

                           </table>
                           </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Footer Section Start -->
<%- include('./footer.ejs') %>




<script>
    function fetchLocation() {
        const pincode = document.getElementById('pincode').value;
        const cityField = document.getElementById('city');
        const districtField = document.getElementById('district');

        if (pincode) {
            fetch(`https://api.postalpincode.in/pincode/${pincode}`)
                .then(response => response.json())
                .then(data => {
                    if (data[0].Status === "Success") {
                        console.log('pincode data',data)
                        const postOffice = data[0].PostOffice[0];
                        cityField.value = postOffice.Division;
                        districtField.value = postOffice.District;
                    } else {
                        cityField.value = '';
                        districtField.value = '';
                    }
                    // enforceAttributes(cityField, districtField);
                })
                .catch(error => {
                    console.error('Error fetching location:', error);
                    cityField.value = '';
                    districtField.value = '';
                    enforceAttributes(cityField, districtField);
                });
        }
    }

    function fetchDataByNumber() {
        const number = document.getElementById('number').value;
        const type =   document.getElementById('type').value;

        if (number) {
            fetch(`/admin/dashboard/fetchnumber/${number}/${type}`) // Replace with your actual API endpoint
                .then(response => response.json())
                .then(data => {
                    console.log(data)
                    if (data[0]) {
                        document.getElementById('alternate_number').value = data[0].alternate_number || '';
                        document.getElementById('email').value = data[0].email || '';
                        document.getElementById('address').value = data[0].address || '';
                        document.getElementById('product').value = data[0].product || '';
                        document.getElementById('model').value = data[0].model || '';
                    } else {
                        clearOptionalFields();
                    }
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                    clearOptionalFields();
                });
        }
    }

    function clearOptionalFields() {
        document.getElementById('alternate_number').value = '';
        document.getElementById('email').value = '';
        document.getElementById('address').value = '';
        document.getElementById('product').value = '';
        document.getElementById('model').value = '';
    }

    function enforceAttributes(cityField, districtField) {
        if (cityField.value === '') {
            cityField.setAttribute('required', 'required');
            cityField.setAttribute('readonly', 'readonly');
        } else {
            cityField.removeAttribute('required');
            cityField.removeAttribute('readonly');
        }
        if (districtField.value === '') {
            districtField.setAttribute('required', 'required');
            districtField.setAttribute('readonly', 'readonly');
        } else {
            districtField.removeAttribute('required');
            districtField.removeAttribute('readonly');
        }
    }

    // Auto-generate tss_order_no
    document.addEventListener('DOMContentLoaded', function() {
        const tssOrderNoField = document.getElementById('tss_order_no');
        if (tssOrderNoField) {
            tssOrderNoField.value = 'TSS' + Date.now(); // Example auto-generated value
        }
    });
</script>



<script>
    document.addEventListener('DOMContentLoaded', function () {
        fetchDropdownData('brand');
        fetchDropdownData('system_type');
        fetchDropdownData('engineer');
        fetchDropdownData('vendor');

    });

    function fetchDropdownData(column) {
        const selectElement = document.getElementById(column);

        if (selectElement) {
            // Example API URL, replace with your actual API endpoint
            const apiUrl = `/admin/dashboard/fetch/${column}`;

            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    if (data && Array.isArray(data)) {
                        data.forEach(item => {
                            const option = document.createElement('option');
                            option.value = item.name; // Adjust based on the API response structure
                            option.textContent = item.name; // Adjust based on the API response structure
                            selectElement.appendChild(option);
                        });
                    }
                })
                .catch(error => {
                    console.error('Error fetching data:', error);
                });
        }
    }








    function assignItem(callid, id,type) {
    // Ask the user for the password
    
    // Check if the password matches the predefined password
   
        // If the password is correct, proceed with deletion
        fetch(`/admin/dashboard/assignItem/?callid=${callid}&partid=${id}&type=${type}`, {
            method: 'GET'
        })
        .then(response => response.json())
        .then(data => {
            if (data.msg == 'success') {
                alert('Item Assign successfully');
                location.reload();  // Reload the page to reflect changes
            }
            else if(data.msg == 'Already Assign'){
                alert('Already Assign')
            } 
            else {
                alert('Failed to assign item');
            }
        })
        .catch(error => console.error('Error:', error));
   
}

 

</script>
